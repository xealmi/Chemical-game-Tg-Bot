from aiogram import F, Router
from aiogram.types import Message, FSInputFile
from data.subloader import get_json, load_json
from keyboards import reply
from datetime import datetime

#=======================================================================================

router = Router()

#=======================================================================================

profile_photo = FSInputFile('data/images/profile.jpg')

#=======================================================================================

@router.message(F.text.casefold().in_(['üë§–ø—Ä–æ—Ñ–∏–ª—å', '–ø—Ä–æ—Ñ–∏–ª—å']))
async def profile(message: Message):
    data = await get_json('data.json')
    if str(message.from_user.id) in data:
        user_data = data[str(message.from_user.id)]
        await message.answer_photo(
            photo=profile_photo,
            caption=f'üë§{message.from_user.full_name}\n'
            '-----------\n'
            f'‚öõ–ü–æ—Å–ª–µ–¥–Ω–∏–π –æ—Ç–∫—Ä—ã—Ç—ã–π —ç–ª–µ–º–µ–Ω—Ç: <b>{(await get_json('chemical_elements.json'))[str(user_data['chemical_element'])]['symbol']}</b>\n'
            f'üåü–û—Ç–∫—Ä—ã—Ç–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤: <b>{user_data['chemical_element']}</b>\n'
            f'üí•–ë–∞–ª–∞–Ω—Å: <b>{user_data['balance']} –∫–î–∂</b>',
            reply_markup=reply.menu_rkb
        )
    else:
        await message.answer(text='–î–ª—è –Ω–∞—á–∞–ª–∞ –æ—Ç–∫—Ä–æ–π—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —Ö–∏–º–∏—á–µ—Å–∫–∏–π —ç–ª–µ–º–µ–Ω—Ç')


@router.message(F.text.casefold().in_(['üí°—Å–æ–±—Ä–∞—Ç—å —ç–Ω–µ—Ä–≥–∏—é', '—ç–Ω–µ—Ä–≥–∏—è', '—Å–æ–±—Ä–∞—Ç—å —ç–Ω–µ—Ä–≥–∏—é']))
async def collect_profit(message:Message):
    data = await get_json('data.json')
    
    if str(message.from_user.id) in data:
        user_data = data[str(message.from_user.id)]
        now = datetime.today()
        time = (now - datetime.fromisoformat(user_data['last_profit_collection'])).seconds//60
        if time !=0:
            income = user_data['income_per_minute']*time
            user_data['balance'] += income
            user_data['last_profit_collection'] = str(now)
            await message.answer(text=f'üí•–í—ã –ø–æ–ª—É—á–∏–ª–∏ <b>{income} –∫–î–∂</b> —ç–Ω–µ—Ä–≥–∏–∏')
            data[str(message.from_user.id)] = user_data
            load_json('data.json', data)
        else:
            await message.answer(text='–í—ã –µ—â—ë –Ω–µ –≤—ã–¥–µ–ª–∏–ª–∏ —ç–Ω–µ—Ä–≥–∏—é!')
    else:
        await message.answer(text='–î–ª—è –Ω–∞—á–∞–ª–∞ –æ—Ç–∫—Ä–æ–π—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —Ö–∏–º–∏—á–µ—Å–∫–∏–π —ç–ª–µ–º–µ–Ω—Ç')

